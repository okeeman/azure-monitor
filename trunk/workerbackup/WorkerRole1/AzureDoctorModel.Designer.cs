//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("azuredoctorModel", "CloudServiceFK", "Subscription", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WorkerRole1.Subscription), "CloudService", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WorkerRole1.CloudService), true)]
[assembly: EdmRelationshipAttribute("azuredoctorModel", "RequestResultFK", "CloudService", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WorkerRole1.CloudService), "RequestResult", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WorkerRole1.RequestResult), true)]
[assembly: EdmRelationshipAttribute("azuredoctorModel", "InstanceStatusFK", "RequestResult", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WorkerRole1.RequestResult), "InstanceStatu", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WorkerRole1.InstanceStatu), true)]

#endregion

namespace WorkerRole1
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class AzureDoctorEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new AzureDoctorEntities object using the connection string found in the 'AzureDoctorEntities' section of the application configuration file.
        /// </summary>
        public AzureDoctorEntities() : base("name=AzureDoctorEntities", "AzureDoctorEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AzureDoctorEntities object.
        /// </summary>
        public AzureDoctorEntities(string connectionString) : base(connectionString, "AzureDoctorEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AzureDoctorEntities object.
        /// </summary>
        public AzureDoctorEntities(EntityConnection connection) : base(connection, "AzureDoctorEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CloudService> CloudServices
        {
            get
            {
                if ((_CloudServices == null))
                {
                    _CloudServices = base.CreateObjectSet<CloudService>("CloudServices");
                }
                return _CloudServices;
            }
        }
        private ObjectSet<CloudService> _CloudServices;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InstanceStatu> InstanceStatus
        {
            get
            {
                if ((_InstanceStatus == null))
                {
                    _InstanceStatus = base.CreateObjectSet<InstanceStatu>("InstanceStatus");
                }
                return _InstanceStatus;
            }
        }
        private ObjectSet<InstanceStatu> _InstanceStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Subscription> Subscriptions
        {
            get
            {
                if ((_Subscriptions == null))
                {
                    _Subscriptions = base.CreateObjectSet<Subscription>("Subscriptions");
                }
                return _Subscriptions;
            }
        }
        private ObjectSet<Subscription> _Subscriptions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Certificate> Certificates
        {
            get
            {
                if ((_Certificates == null))
                {
                    _Certificates = base.CreateObjectSet<Certificate>("Certificates");
                }
                return _Certificates;
            }
        }
        private ObjectSet<Certificate> _Certificates;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RequestResult> RequestResults
        {
            get
            {
                if ((_RequestResults == null))
                {
                    _RequestResults = base.CreateObjectSet<RequestResult>("RequestResults");
                }
                return _RequestResults;
            }
        }
        private ObjectSet<RequestResult> _RequestResults;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CloudServices EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCloudServices(CloudService cloudService)
        {
            base.AddObject("CloudServices", cloudService);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InstanceStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInstanceStatus(InstanceStatu instanceStatu)
        {
            base.AddObject("InstanceStatus", instanceStatu);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Subscriptions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSubscriptions(Subscription subscription)
        {
            base.AddObject("Subscriptions", subscription);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Certificates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCertificates(Certificate certificate)
        {
            base.AddObject("Certificates", certificate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RequestResults EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRequestResults(RequestResult requestResult)
        {
            base.AddObject("RequestResults", requestResult);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="azuredoctorModel", Name="Certificate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Certificate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Certificate object.
        /// </summary>
        /// <param name="certRecordID">Initial value of the CertRecordID property.</param>
        public static Certificate CreateCertificate(global::System.Int32 certRecordID)
        {
            Certificate certificate = new Certificate();
            certificate.CertRecordID = certRecordID;
            return certificate;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CertRecordID
        {
            get
            {
                return _CertRecordID;
            }
            set
            {
                if (_CertRecordID != value)
                {
                    OnCertRecordIDChanging(value);
                    ReportPropertyChanging("CertRecordID");
                    _CertRecordID = StructuralObject.SetValidValue(value, "CertRecordID");
                    ReportPropertyChanged("CertRecordID");
                    OnCertRecordIDChanged();
                }
            }
        }
        private global::System.Int32 _CertRecordID;
        partial void OnCertRecordIDChanging(global::System.Int32 value);
        partial void OnCertRecordIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CertificateName
        {
            get
            {
                return _CertificateName;
            }
            set
            {
                OnCertificateNameChanging(value);
                ReportPropertyChanging("CertificateName");
                _CertificateName = StructuralObject.SetValidValue(value, true, "CertificateName");
                ReportPropertyChanged("CertificateName");
                OnCertificateNameChanged();
            }
        }
        private global::System.String _CertificateName;
        partial void OnCertificateNameChanging(global::System.String value);
        partial void OnCertificateNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Thumbprint
        {
            get
            {
                return _Thumbprint;
            }
            set
            {
                OnThumbprintChanging(value);
                ReportPropertyChanging("Thumbprint");
                _Thumbprint = StructuralObject.SetValidValue(value, true, "Thumbprint");
                ReportPropertyChanged("Thumbprint");
                OnThumbprintChanged();
            }
        }
        private global::System.String _Thumbprint;
        partial void OnThumbprintChanging(global::System.String value);
        partial void OnThumbprintChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ExpiryDate
        {
            get
            {
                return _ExpiryDate;
            }
            set
            {
                OnExpiryDateChanging(value);
                ReportPropertyChanging("ExpiryDate");
                _ExpiryDate = StructuralObject.SetValidValue(value, "ExpiryDate");
                ReportPropertyChanged("ExpiryDate");
                OnExpiryDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ExpiryDate;
        partial void OnExpiryDateChanging(Nullable<global::System.DateTime> value);
        partial void OnExpiryDateChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="azuredoctorModel", Name="CloudService")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CloudService : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CloudService object.
        /// </summary>
        /// <param name="cloudServiceID">Initial value of the CloudServiceID property.</param>
        /// <param name="subscriptionRecordID">Initial value of the SubscriptionRecordID property.</param>
        public static CloudService CreateCloudService(global::System.Int32 cloudServiceID, global::System.Int32 subscriptionRecordID)
        {
            CloudService cloudService = new CloudService();
            cloudService.CloudServiceID = cloudServiceID;
            cloudService.SubscriptionRecordID = subscriptionRecordID;
            return cloudService;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CloudServiceID
        {
            get
            {
                return _CloudServiceID;
            }
            set
            {
                if (_CloudServiceID != value)
                {
                    OnCloudServiceIDChanging(value);
                    ReportPropertyChanging("CloudServiceID");
                    _CloudServiceID = StructuralObject.SetValidValue(value, "CloudServiceID");
                    ReportPropertyChanged("CloudServiceID");
                    OnCloudServiceIDChanged();
                }
            }
        }
        private global::System.Int32 _CloudServiceID;
        partial void OnCloudServiceIDChanging(global::System.Int32 value);
        partial void OnCloudServiceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SubscriptionRecordID
        {
            get
            {
                return _SubscriptionRecordID;
            }
            set
            {
                OnSubscriptionRecordIDChanging(value);
                ReportPropertyChanging("SubscriptionRecordID");
                _SubscriptionRecordID = StructuralObject.SetValidValue(value, "SubscriptionRecordID");
                ReportPropertyChanged("SubscriptionRecordID");
                OnSubscriptionRecordIDChanged();
            }
        }
        private global::System.Int32 _SubscriptionRecordID;
        partial void OnSubscriptionRecordIDChanging(global::System.Int32 value);
        partial void OnSubscriptionRecordIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CloudServiceName
        {
            get
            {
                return _CloudServiceName;
            }
            set
            {
                OnCloudServiceNameChanging(value);
                ReportPropertyChanging("CloudServiceName");
                _CloudServiceName = StructuralObject.SetValidValue(value, true, "CloudServiceName");
                ReportPropertyChanged("CloudServiceName");
                OnCloudServiceNameChanged();
            }
        }
        private global::System.String _CloudServiceName;
        partial void OnCloudServiceNameChanging(global::System.String value);
        partial void OnCloudServiceNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, true, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("azuredoctorModel", "CloudServiceFK", "Subscription")]
        public Subscription Subscription
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subscription>("azuredoctorModel.CloudServiceFK", "Subscription").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subscription>("azuredoctorModel.CloudServiceFK", "Subscription").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Subscription> SubscriptionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subscription>("azuredoctorModel.CloudServiceFK", "Subscription");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Subscription>("azuredoctorModel.CloudServiceFK", "Subscription", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("azuredoctorModel", "RequestResultFK", "RequestResult")]
        public EntityCollection<RequestResult> RequestResults
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RequestResult>("azuredoctorModel.RequestResultFK", "RequestResult");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RequestResult>("azuredoctorModel.RequestResultFK", "RequestResult", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="azuredoctorModel", Name="InstanceStatu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InstanceStatu : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InstanceStatu object.
        /// </summary>
        /// <param name="instanceStatusID">Initial value of the InstanceStatusID property.</param>
        /// <param name="requestID">Initial value of the RequestID property.</param>
        public static InstanceStatu CreateInstanceStatu(global::System.Int32 instanceStatusID, global::System.Int32 requestID)
        {
            InstanceStatu instanceStatu = new InstanceStatu();
            instanceStatu.InstanceStatusID = instanceStatusID;
            instanceStatu.RequestID = requestID;
            return instanceStatu;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InstanceStatusID
        {
            get
            {
                return _InstanceStatusID;
            }
            set
            {
                if (_InstanceStatusID != value)
                {
                    OnInstanceStatusIDChanging(value);
                    ReportPropertyChanging("InstanceStatusID");
                    _InstanceStatusID = StructuralObject.SetValidValue(value, "InstanceStatusID");
                    ReportPropertyChanged("InstanceStatusID");
                    OnInstanceStatusIDChanged();
                }
            }
        }
        private global::System.Int32 _InstanceStatusID;
        partial void OnInstanceStatusIDChanging(global::System.Int32 value);
        partial void OnInstanceStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RequestID
        {
            get
            {
                return _RequestID;
            }
            set
            {
                OnRequestIDChanging(value);
                ReportPropertyChanging("RequestID");
                _RequestID = StructuralObject.SetValidValue(value, "RequestID");
                ReportPropertyChanged("RequestID");
                OnRequestIDChanged();
            }
        }
        private global::System.Int32 _RequestID;
        partial void OnRequestIDChanging(global::System.Int32 value);
        partial void OnRequestIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InstanceStatus
        {
            get
            {
                return _InstanceStatus;
            }
            set
            {
                OnInstanceStatusChanging(value);
                ReportPropertyChanging("InstanceStatus");
                _InstanceStatus = StructuralObject.SetValidValue(value, true, "InstanceStatus");
                ReportPropertyChanged("InstanceStatus");
                OnInstanceStatusChanged();
            }
        }
        private global::System.String _InstanceStatus;
        partial void OnInstanceStatusChanging(global::System.String value);
        partial void OnInstanceStatusChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("azuredoctorModel", "InstanceStatusFK", "RequestResult")]
        public RequestResult RequestResult
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RequestResult>("azuredoctorModel.InstanceStatusFK", "RequestResult").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RequestResult>("azuredoctorModel.InstanceStatusFK", "RequestResult").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RequestResult> RequestResultReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RequestResult>("azuredoctorModel.InstanceStatusFK", "RequestResult");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RequestResult>("azuredoctorModel.InstanceStatusFK", "RequestResult", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="azuredoctorModel", Name="RequestResult")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RequestResult : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RequestResult object.
        /// </summary>
        /// <param name="requestID">Initial value of the RequestID property.</param>
        /// <param name="cloudServiceID">Initial value of the CloudServiceID property.</param>
        public static RequestResult CreateRequestResult(global::System.Int32 requestID, global::System.Int32 cloudServiceID)
        {
            RequestResult requestResult = new RequestResult();
            requestResult.RequestID = requestID;
            requestResult.CloudServiceID = cloudServiceID;
            return requestResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RequestID
        {
            get
            {
                return _RequestID;
            }
            set
            {
                if (_RequestID != value)
                {
                    OnRequestIDChanging(value);
                    ReportPropertyChanging("RequestID");
                    _RequestID = StructuralObject.SetValidValue(value, "RequestID");
                    ReportPropertyChanged("RequestID");
                    OnRequestIDChanged();
                }
            }
        }
        private global::System.Int32 _RequestID;
        partial void OnRequestIDChanging(global::System.Int32 value);
        partial void OnRequestIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CloudServiceID
        {
            get
            {
                return _CloudServiceID;
            }
            set
            {
                OnCloudServiceIDChanging(value);
                ReportPropertyChanging("CloudServiceID");
                _CloudServiceID = StructuralObject.SetValidValue(value, "CloudServiceID");
                ReportPropertyChanged("CloudServiceID");
                OnCloudServiceIDChanged();
            }
        }
        private global::System.Int32 _CloudServiceID;
        partial void OnCloudServiceIDChanging(global::System.Int32 value);
        partial void OnCloudServiceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> AllInstancesHealthy
        {
            get
            {
                return _AllInstancesHealthy;
            }
            set
            {
                OnAllInstancesHealthyChanging(value);
                ReportPropertyChanging("AllInstancesHealthy");
                _AllInstancesHealthy = StructuralObject.SetValidValue(value, "AllInstancesHealthy");
                ReportPropertyChanged("AllInstancesHealthy");
                OnAllInstancesHealthyChanged();
            }
        }
        private Nullable<global::System.Boolean> _AllInstancesHealthy;
        partial void OnAllInstancesHealthyChanging(Nullable<global::System.Boolean> value);
        partial void OnAllInstancesHealthyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DeploymentSlot
        {
            get
            {
                return _DeploymentSlot;
            }
            set
            {
                OnDeploymentSlotChanging(value);
                ReportPropertyChanging("DeploymentSlot");
                _DeploymentSlot = StructuralObject.SetValidValue(value, true, "DeploymentSlot");
                ReportPropertyChanged("DeploymentSlot");
                OnDeploymentSlotChanged();
            }
        }
        private global::System.String _DeploymentSlot;
        partial void OnDeploymentSlotChanging(global::System.String value);
        partial void OnDeploymentSlotChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InstanceSize
        {
            get
            {
                return _InstanceSize;
            }
            set
            {
                OnInstanceSizeChanging(value);
                ReportPropertyChanging("InstanceSize");
                _InstanceSize = StructuralObject.SetValidValue(value, true, "InstanceSize");
                ReportPropertyChanged("InstanceSize");
                OnInstanceSizeChanged();
            }
        }
        private global::System.String _InstanceSize;
        partial void OnInstanceSizeChanging(global::System.String value);
        partial void OnInstanceSizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InstanceCount
        {
            get
            {
                return _InstanceCount;
            }
            set
            {
                OnInstanceCountChanging(value);
                ReportPropertyChanging("InstanceCount");
                _InstanceCount = StructuralObject.SetValidValue(value, true, "InstanceCount");
                ReportPropertyChanged("InstanceCount");
                OnInstanceCountChanged();
            }
        }
        private global::System.String _InstanceCount;
        partial void OnInstanceCountChanging(global::System.String value);
        partial void OnInstanceCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VIPAddress
        {
            get
            {
                return _VIPAddress;
            }
            set
            {
                OnVIPAddressChanging(value);
                ReportPropertyChanging("VIPAddress");
                _VIPAddress = StructuralObject.SetValidValue(value, true, "VIPAddress");
                ReportPropertyChanged("VIPAddress");
                OnVIPAddressChanged();
            }
        }
        private global::System.String _VIPAddress;
        partial void OnVIPAddressChanging(global::System.String value);
        partial void OnVIPAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Location
        {
            get
            {
                return _Location;
            }
            set
            {
                OnLocationChanging(value);
                ReportPropertyChanging("Location");
                _Location = StructuralObject.SetValidValue(value, true, "Location");
                ReportPropertyChanged("Location");
                OnLocationChanged();
            }
        }
        private global::System.String _Location;
        partial void OnLocationChanging(global::System.String value);
        partial void OnLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HostedServiceStatus
        {
            get
            {
                return _HostedServiceStatus;
            }
            set
            {
                OnHostedServiceStatusChanging(value);
                ReportPropertyChanging("HostedServiceStatus");
                _HostedServiceStatus = StructuralObject.SetValidValue(value, true, "HostedServiceStatus");
                ReportPropertyChanged("HostedServiceStatus");
                OnHostedServiceStatusChanged();
            }
        }
        private global::System.String _HostedServiceStatus;
        partial void OnHostedServiceStatusChanging(global::System.String value);
        partial void OnHostedServiceStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DeploymentStatus
        {
            get
            {
                return _DeploymentStatus;
            }
            set
            {
                OnDeploymentStatusChanging(value);
                ReportPropertyChanging("DeploymentStatus");
                _DeploymentStatus = StructuralObject.SetValidValue(value, true, "DeploymentStatus");
                ReportPropertyChanged("DeploymentStatus");
                OnDeploymentStatusChanged();
            }
        }
        private global::System.String _DeploymentStatus;
        partial void OnDeploymentStatusChanging(global::System.String value);
        partial void OnDeploymentStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VMStatus
        {
            get
            {
                return _VMStatus;
            }
            set
            {
                OnVMStatusChanging(value);
                ReportPropertyChanging("VMStatus");
                _VMStatus = StructuralObject.SetValidValue(value, true, "VMStatus");
                ReportPropertyChanged("VMStatus");
                OnVMStatusChanged();
            }
        }
        private global::System.String _VMStatus;
        partial void OnVMStatusChanging(global::System.String value);
        partial void OnVMStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateTime
        {
            get
            {
                return _DateTime;
            }
            set
            {
                OnDateTimeChanging(value);
                ReportPropertyChanging("DateTime");
                _DateTime = StructuralObject.SetValidValue(value, "DateTime");
                ReportPropertyChanged("DateTime");
                OnDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateTime;
        partial void OnDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnDateTimeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("azuredoctorModel", "RequestResultFK", "CloudService")]
        public CloudService CloudService
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CloudService>("azuredoctorModel.RequestResultFK", "CloudService").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CloudService>("azuredoctorModel.RequestResultFK", "CloudService").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CloudService> CloudServiceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CloudService>("azuredoctorModel.RequestResultFK", "CloudService");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CloudService>("azuredoctorModel.RequestResultFK", "CloudService", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("azuredoctorModel", "InstanceStatusFK", "InstanceStatu")]
        public EntityCollection<InstanceStatu> InstanceStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InstanceStatu>("azuredoctorModel.InstanceStatusFK", "InstanceStatu");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InstanceStatu>("azuredoctorModel.InstanceStatusFK", "InstanceStatu", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="azuredoctorModel", Name="Subscription")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Subscription : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Subscription object.
        /// </summary>
        /// <param name="subscriptionRecordID">Initial value of the SubscriptionRecordID property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static Subscription CreateSubscription(global::System.Int32 subscriptionRecordID, global::System.Int32 userId)
        {
            Subscription subscription = new Subscription();
            subscription.SubscriptionRecordID = subscriptionRecordID;
            subscription.UserId = userId;
            return subscription;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SubscriptionRecordID
        {
            get
            {
                return _SubscriptionRecordID;
            }
            set
            {
                if (_SubscriptionRecordID != value)
                {
                    OnSubscriptionRecordIDChanging(value);
                    ReportPropertyChanging("SubscriptionRecordID");
                    _SubscriptionRecordID = StructuralObject.SetValidValue(value, "SubscriptionRecordID");
                    ReportPropertyChanged("SubscriptionRecordID");
                    OnSubscriptionRecordIDChanged();
                }
            }
        }
        private global::System.Int32 _SubscriptionRecordID;
        partial void OnSubscriptionRecordIDChanging(global::System.Int32 value);
        partial void OnSubscriptionRecordIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SubscriptionName
        {
            get
            {
                return _SubscriptionName;
            }
            set
            {
                OnSubscriptionNameChanging(value);
                ReportPropertyChanging("SubscriptionName");
                _SubscriptionName = StructuralObject.SetValidValue(value, true, "SubscriptionName");
                ReportPropertyChanged("SubscriptionName");
                OnSubscriptionNameChanged();
            }
        }
        private global::System.String _SubscriptionName;
        partial void OnSubscriptionNameChanging(global::System.String value);
        partial void OnSubscriptionNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AzureSubscriptionID
        {
            get
            {
                return _AzureSubscriptionID;
            }
            set
            {
                OnAzureSubscriptionIDChanging(value);
                ReportPropertyChanging("AzureSubscriptionID");
                _AzureSubscriptionID = StructuralObject.SetValidValue(value, true, "AzureSubscriptionID");
                ReportPropertyChanged("AzureSubscriptionID");
                OnAzureSubscriptionIDChanged();
            }
        }
        private global::System.String _AzureSubscriptionID;
        partial void OnAzureSubscriptionIDChanging(global::System.String value);
        partial void OnAzureSubscriptionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, "UserId");
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhoneNumber
        {
            get
            {
                return _PhoneNumber;
            }
            set
            {
                OnPhoneNumberChanging(value);
                ReportPropertyChanging("PhoneNumber");
                _PhoneNumber = StructuralObject.SetValidValue(value, true, "PhoneNumber");
                ReportPropertyChanged("PhoneNumber");
                OnPhoneNumberChanged();
            }
        }
        private global::System.String _PhoneNumber;
        partial void OnPhoneNumberChanging(global::System.String value);
        partial void OnPhoneNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, true, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("azuredoctorModel", "CloudServiceFK", "CloudService")]
        public EntityCollection<CloudService> CloudServices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CloudService>("azuredoctorModel.CloudServiceFK", "CloudService");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CloudService>("azuredoctorModel.CloudServiceFK", "CloudService", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
